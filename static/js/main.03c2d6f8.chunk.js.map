{"version":3,"sources":["constant.js","components/User/redux/action.js","services/storage.js","services/api.js","components/User/redux/api.js","components/User/redux/saga.js","components/Class/redux/action.js","services/auth.js","components/Class/redux/api.js","components/Class/redux/saga.js","components/Course/redux/action.js","components/Course/redux/util.js","components/Course/redux/api.js","components/Course/redux/saga.js","rootSaga.js","components/App/redux/action.js","components/User/redux/reducer.js","components/Class/redux/reducer.js","components/Course/redux/reducer.js","rootReducer.js","store.js","routing/Routes/OnlyLoggedIn.js","routing/Routes/index.js","pages/Login/index.js","components/common/FormComponent/InputField/index.js","components/Class/constant.js","components/common/Loader/index.js","components/Class/index.js","components/Class/ClassCard/index.js","components/Class/ClassList/index.js","components/common/Modal/index.js","pages/CreateClass/index.js","components/Course/constant.js","components/Course/CourseCard/index.js","components/Course/CourseList/index.js","components/common/SearchBox/index.js","components/Course/index.js","pages/Course/index.js","components/common/Arrow/index.js","components/Course/Content/GoForwardArrow/index.js","components/Course/Content/ExerciseContent/index.js","components/Course/Content/Exercise/index.js","components/Course/Content/ExerciseList/Exercise/CollapseArrow/index.js","components/Course/Content/ExerciseList/Exercise/index.js","components/Course/Content/ExerciseList/index.js","components/Course/Content/GoBackArrow/index.js","pages/CourseContent/index.js","routing/index.js","components/Header/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["PATHS","types","actions","data","type","error","userStateMiddleware","store","next","action","result","authState","getState","User","localStorage","setItem","JSON","stringify","removeItem","METHODS","HeaderFactory","token","headers","Headers","Authorization","sendGoogleUserData","userData","tokens","axios","url","process","method","idToken","mode","handleGoogleUserData","handleLogout","call","res","status","mappedUserData","isAuthenticated","put","window","location","pathname","takeLatest","httpStatuses","UNAUTHORIZED","FORBIDDEN","OPERATION_FAILED","SUCCESS","authorizeRequest","fn","select","userActions","response","includes","errorResponse","message","getAllClasses","classData","createClass","handleCreateClass","handleGetClasses","classCreateResponse","alert","classesResponse","classes","mapCourseContent","contentResponse","get","exercises","exerciseList","map","exercise","childExercises","childExercise","content","value","githubLink","github_link","id","name","slug","getCourses","getCourseContent","courseId","handleGetCourses","handleGetCourseContent","coursesResponse","courses","mappedCourses","allCourses","course","logo","description","short_description","mappedCourseContent","all","fork","Class","Course","initialState","loading","allClasses","courseContent","selectedExercise","parentExercise","index","subExerciseIndex","history","createBrowserHistory","appReducer","combineReducers","state","router","connectRouter","rootReducer","appTypes","undefined","composeEnhanced","compose","initialStore","sagaMiddleware","createSagaMiddleware","createStore","getItem","parse","e","getUserInitialState","applyMiddleware","run","rootSaga","OnlyLoggedIn","passedProps","user","Component","component","rest","render","props","to","from","PrivateRoute","withRouter","connect","Login","dispatch","useDispatch","useSelector","className","clientId","buttonText","onSuccess","googleUser","profile","getBasicProfile","getAuthResponse","id_token","googleData","getId","getName","imageUrl","getImageUrl","email","getEmail","onFailure","console","log","cookiePolicy","InputField","label","labelClassName","inputClassName","TIME_CONSTANT","CLASS_FORM_FIELDS","required","list","onKeyDown","preventDefault","Loader","pageLoader","SelectOptions","useState","allCourse","setAllCourse","useEffect","accept","then","item","key","data-value","rolesList","onSubmit","event","formData","FormData","target","formFields","languageMap","Hindi","Telugu","English","Tamil","entries","fieldName","selectedOptionElement","document","getElementById","querySelector","dataset","payload","classStartTime","moment","classEndTime","valueOf","focus","format","handleTimeValicationAndCreateClass","filter","field","indexOf","disabled","toast","configure","ClassCard","start_time","replace","end_time","hi","te","en","ta","doubt_class","workshop","flag","role","deleteHandler","success","position","POSITION","BOTTOM_RIGHT","autoClose","title","facilitator","lang","facilitator_id","onClick","ClassList","classActions","length","Modal","modalRef","useRef","onClose","handleClick","contains","addEventListener","removeEventListener","backGroundClassName","ref","closeStyle","children","defaultProps","ToggleClassFormModal","React","showModel","setShowModel","handleClickOpen","COURSE_CARD_COLORS","CourseCard","randomBackgroundColor","href","style","background","src","alt","CourseList","SearchBox","placeholder","onChange","filteredCourse","search","setSearch","courseActions","names","toLowerCase","Arrow","left","GoBackArrow","isLastExerciseSelected","hasSubExercises","isLastChild","mainExercise","selectedChildExercise","nextIndex","nextExercise","nextSubExerciseIndex","parseHtml","htmlParser","isValidNode","node","processingInstructions","RenderContent","source","escapeHtml","astPlugins","videoId","ExerciseContent","contentItem","EditOnGithub","link","rel","Exercise","CollapseArrow","haveChildExercises","showChildExercise","ExerciseLogo","selected","focusable","viewBox","aria-hidden","d","SubExerciseLogo","ExerciseTitle","isChildExercise","isSelectedAndHaveKids","setShowChildExercise","handleExerciseClick","containerClasses","ExerciseList","handleExerciseChange","useCallback","clickedExerciseInfo","isChildSelected","isFirstExerciseSelected","isFirstChildSelected","previousSubExerciseIndex","previousExerciseIndex","previousExercise","selectedMainExercise","lastChildExerciseIndex","CourseContent","useHistory","useRouteMatch","path","exerciseId","courseName","courseTitle","URLSearchParams","exerciseIdFromParams","split","pop","getExerciseIdFromUrl","firstExercise","defaultExercise","defaultExerciseIndex","exerciseFromParamsIndex","findIndex","push","GoForwardArrow","Routing","exact","CreateClass","AuthenticatedHeaderOption","PublicMenuOption","Header","App","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03c2d6f8.chunk.js","sourcesContent":["export const AUTH_KEY = \"__AUTH__\";\n\nexport const PATHS = {\n  HOME_PATH: \"/\",\n  LOGIN: \"/login\",\n  CLASS: \"/class\",\n  COURSE: \"/course\",\n  COURSE_CONTENT: \"/course/:courseId\",\n  EXERCISE: \"/exercise/:exerciseId\",\n};\n","export const types = {\n  ON_USER_SIGN_INTENT: \"ON_USER_SIGN_INTENT\",\n  ON_USER_SIGN_INTENT_RESOLVED: \"ON_USER_SIGN_INTENT_RESOLVED\",\n  ON_USER_SIGN_INTENT_REJECTED: \"ON_USER_SIGN_INTENT_REJECTED\",\n\n  ON_LOGOUT_INTENT: \"ON_LOGOUT_INTENT\",\n};\n\nexport const actions = {\n  onUserSignin(data) {\n    return {\n      type: types.ON_USER_SIGN_INTENT,\n      data,\n    };\n  },\n  onUserSigninResolved(data) {\n    return {\n      type: types.ON_USER_SIGN_INTENT_RESOLVED,\n      data,\n    };\n  },\n  onUserSigninRejected(error) {\n    return {\n      type: types.ON_USER_SIGN_INTENT_REJECTED,\n      error,\n    };\n  },\n\n  logout() {\n    return {\n      type: types.ON_LOGOUT_INTENT,\n    };\n  },\n};\n","import { AUTH_KEY } from \"../constant.js\";\nimport { types } from \"../components/User/redux/action\";\n\nexport function getUserInitialState() {\n  const state = localStorage.getItem(AUTH_KEY);\n  if (state) {\n    try {\n      let parsedState = JSON.parse(state);\n      return {\n        User: parsedState,\n      };\n    } catch (e) {\n      return {};\n    }\n  } else return {};\n}\n\nexport const userStateMiddleware = (store) => (next) => (action) => {\n  if (action.type === types.ON_USER_SIGN_INTENT_RESOLVED) {\n    let result = next(action);\n    const authState = store.getState().User;\n    localStorage.setItem(AUTH_KEY, JSON.stringify(authState));\n    return result;\n  } else if (action.type === types.ON_LOGOUT_INTENT) {\n    let result = next(action);\n    localStorage.removeItem(AUTH_KEY);\n    return result;\n  } else return next(action);\n};\n","/**\n * Common HTTP Methods used\n */\nexport const METHODS = {\n  GET: \"GET\",\n  POST: \"POST\",\n  PUT: \"PUT\",\n  DELETE: \"DELETE\",\n  HEAD: \"HEAD\",\n};\n\n/**\n * Generate the headers needed for the requests\n * @param {String} token - Token used on Authentication\n */\nexport const HeaderFactory = (token) => {\n  const headers = new Headers();\n  if (!token) {\n    return headers;\n  }\n  const customHeaders = {\n    \"Content-Type\": \"application/json\",\n    Authorization: token,\n    // 'x-api-key': process.env.REACT_APP_TEST_API_KEY\n  };\n  return customHeaders;\n};\n\n/**\n * Handle Gracefully an HTTP Error\n * @param {Error} error - Fetch Error\n */\nexport function* ErrorHandler(error) {\n  const genericResponse = { message: \"Something Went Wrong, try again later\" };\n  if (error && error.json) {\n    try {\n      const data = yield error.json();\n      return data;\n    } catch (e) {\n      return genericResponse;\n    }\n  } else return genericResponse;\n}\n","import axios from \"axios\";\nimport { METHODS, HeaderFactory } from \"../../../services/api\";\n\n/**\n * Sends google id-token to meraki back-end to register the user.\n *\n * @param {userData} mapped information for google user after signin with google\n * @param {object} opts\n *\n * @returns {Promise}\n */\nexport const sendGoogleUserData = (userData, tokens) => {\n  return axios({\n    url: `${process.env.REACT_APP_MERAKI_URL}/users/auth/google`,\n    method: METHODS.POST,\n    headers: HeaderFactory(tokens),\n    data: {\n      idToken: userData.idToken,\n      mode: \"web\",\n    },\n  });\n};\n","import { takeLatest, put, call } from \"redux-saga/effects\";\n\nimport { types, actions } from \"./action\";\nimport { sendGoogleUserData } from \"./api\";\nimport { PATHS } from \"../../../constant\";\n\n/**\n * Handles sending google sign in user udata to back-end\n * @param {object} payload\n */\nfunction* handleGoogleUserData({ data }) {\n  const res = yield call(sendGoogleUserData, data);\n  if (res.status === 200) {\n    const mappedUserData = { ...res.data, isAuthenticated: true };\n    yield put(actions.onUserSigninResolved(mappedUserData));\n  } else {\n    yield put(actions.onUserSigninRejected(res));\n  }\n}\n\nfunction* handleLogout() {\n  yield (window.location.pathname = PATHS.LOGIN);\n}\n\nexport default function* () {\n  yield takeLatest(types.ON_USER_SIGN_INTENT, handleGoogleUserData);\n  yield takeLatest(types.ON_LOGOUT_INTENT, handleLogout);\n}\n","export const types = {\n  GET_CLASSES_INTENT: \"GET_CLASSES_INTENT\",\n  GET_CLASSES_INTENT_RESOLVED: \"GET_CLASSES_INTENT_RESOLVED\",\n  GET_CLASSES_INTENT_REJECTED: \"GET_CLASSES_INTENT_REJECTED\",\n  GET_CREATE_CLASS_INTENT: \"GET_CREATE_CLASS_INTENT\",\n  GET_CREATE_CLASS_INTENT_RESOLVED: \"GET_CREATE_CLASS_INTENT_RESOLVED\",\n  GET_CREATE_CLASS_INTENT_REJECTED: \"GET_CREATE_CLASS_INTENT_REJECTED\",\n};\n\nexport const actions = {\n  getClasses(data) {\n    return {\n      type: types.GET_CLASSES_INTENT,\n      data,\n    };\n  },\n  getClassesResolved(data) {\n    return {\n      type: types.GET_CLASSES_INTENT_RESOLVED,\n      data,\n    };\n  },\n  getClassesRejected(error) {\n    return {\n      type: types.GET_CLASSES_INTENT_REJECTED,\n      error,\n    };\n  },\n  createClass(data) {\n    return {\n      type: types.GET_CREATE_CLASS_INTENT,\n      data,\n    };\n  },\n  createClassResolved(data) {\n    return {\n      type: types.GET_CREATE_CLASS_INTENT_RESOLVED,\n      data,\n    };\n  },\n  createClassRejected(error) {\n    return {\n      type: types.GET_CREATE_CLASS_INTENT_REJECTED,\n      error,\n    };\n  },\n};\n","import { call, put, select } from \"redux-saga/effects\";\n// import { NetworkError } from '../services/error'\n\nimport { actions as userActions } from \"../components/User/redux/action\";\n\nexport const httpStatuses = {\n  UNAUTHORIZED: [401],\n  FORBIDDEN: [403],\n  OPERATION_FAILED: [400, 404, 500, 502],\n  SUCCESS: [200, 201, 202],\n};\n\nexport const authorizeRequest = function* (fn, data) {\n  let token;\n  try {\n    token = yield select(({ User }) => User.data.token);\n  } catch (error) {\n    // if we don't have any token data in the redux for the user(i.e no tokens available) we will log out.\n    yield put(userActions.logout());\n    return;\n  }\n  try {\n    let response = yield call(fn, data, token);\n    // TODO: check if token needs to be refreshed by checking some particular code.\n    // response = yield refreshToken(fn, data, token)\n    if (httpStatuses.SUCCESS.includes(response.status)) {\n      return response;\n    }\n  } catch (error) {\n    const errorResponse = error.response;\n    if (httpStatuses.OPERATION_FAILED.includes(errorResponse.status)) {\n      return errorResponse;\n    } else if (httpStatuses.FORBIDDEN.includes(errorResponse.status)) {\n      return yield put(userActions.logout());\n    }\n    return { status: 503, message: \"Something went wrong\" };\n  }\n};\n","import axios from \"axios\";\nimport { METHODS, HeaderFactory } from \"../../../services/api\";\n\n/**\n * end-point to get all the classes\n *\n * @param {classData} object no payload\n * @param {object} opts\n *\n * @returns {Promise}\n */\nexport const getAllClasses = (classData, token) => {\n  return axios({\n    url: `${process.env.REACT_APP_MERAKI_URL}/classes/upcoming`,\n    method: METHODS.GET,\n    headers: HeaderFactory(token),\n  });\n};\n\n/**\n * end-point to create a class.\n *\n * @param {classData} object payload to create a class.\n * @param {object} opts\n *\n * @returns {Promise}\n */\nexport const createClass = (classData, token) => {\n  return axios({\n    url: `${process.env.REACT_APP_MERAKI_URL}/classes`,\n    method: METHODS.POST,\n    headers: HeaderFactory(token),\n    data: {\n      ...classData,\n    },\n  });\n};\n","import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { types, actions } from \"./action\";\nimport { authorizeRequest, httpStatuses } from \"../../../services/auth\";\nimport { getAllClasses, createClass } from \"./api\";\n/**\n * Handles creating a new class.\n * @param {object} payload\n */\nfunction* handleCreateClass({ data }) {\n  const classCreateResponse = yield call(authorizeRequest, createClass, data);\n  if (\n    classCreateResponse &&\n    httpStatuses.SUCCESS.includes(classCreateResponse.status)\n  ) {\n    yield put(actions.createClassResolved(classCreateResponse.data));\n    alert(\"You successfully created a class.\");\n  } else {\n    yield put(actions.createClassRejected(classCreateResponse));\n    alert(\n      `Something went wrong with error status: ${classCreateResponse.status} ${classCreateResponse.message}`\n    );\n  }\n}\n/**\n * Handles getting all the classes\n * @param {object} payload\n */\nfunction* handleGetClasses({ data }) {\n  const classesResponse = yield call(authorizeRequest, getAllClasses, data);\n  if (\n    classesResponse &&\n    httpStatuses.SUCCESS.includes(classesResponse.status)\n  ) {\n    yield put(actions.getClassesResolved(classesResponse.data.classes));\n  } else {\n    yield put(actions.getClassesRejected(classesResponse));\n  }\n}\nexport default function* () {\n  yield takeLatest(types.GET_CLASSES_INTENT, handleGetClasses);\n  yield takeLatest(types.GET_CREATE_CLASS_INTENT, handleCreateClass);\n}\n","export const types = {\n  GET_COURSES_INTENT: \"GET_COURSES_INTENT\",\n  GET_COURSES_INTENT_RESOLVED: \"GET_COURSES_INTENT_RESOLVED\",\n  GET_COURSES_INTENT_REJECTED: \"GET_COURSES_INTENT_REJECTED\",\n\n  GET_COURSE_CONTENT_INTENT: \"GET_COURSE_CONTENT_INTENT\",\n  GET_COURSE_CONTENT_INTENT_RESOLVED: \"GET_COURSE_CONTENT_INTENT_RESOLVED\",\n  GET_COURSE_CONTENT_INTENT_REJECTED: \"GET_COURSE_CONTENT_INTENT_REJECTED\",\n\n  UPDATE_SELECTED_EXERCISE: \"UPDATE_SELECTED_EXERCISE\",\n};\n\nexport const actions = {\n  getCourses(data) {\n    return {\n      type: types.GET_COURSES_INTENT,\n      data,\n    };\n  },\n  getCoursesResolved(data) {\n    return {\n      type: types.GET_COURSES_INTENT_RESOLVED,\n      data,\n    };\n  },\n  getCoursesRejected(error) {\n    return {\n      type: types.GET_COURSES_INTENT_REJECTED,\n      error,\n    };\n  },\n\n  getCourseContent(data) {\n    return {\n      type: types.GET_COURSE_CONTENT_INTENT,\n      data,\n    };\n  },\n  getCourseContentResolved(data) {\n    return {\n      type: types.GET_COURSE_CONTENT_INTENT_RESOLVED,\n      data,\n    };\n  },\n  getCourseContentRejected(error) {\n    return {\n      type: types.GET_COURSE_CONTENT_INTENT_REJECTED,\n      error,\n    };\n  },\n\n  /**\n   *\n   * @param {Object} data\n   * @param {Object} data.exercise selected exercise which contain we are suppose to render\n   * @param {Object} data.parentExercise if child exercise selected, keeping a reference on parent exercise\n   * @param {Object} data.index Keeping a reference of selected main exericse index.\n   * @param {Object} data.subExerciseIndex if currently child exercise has been clicked, rendered.\n   * Keeping the reference of it's index\n   */\n  updateSelectedExercise(data) {\n    return {\n      type: types.UPDATE_SELECTED_EXERCISE,\n      data,\n    };\n  },\n};\n","import get from \"lodash/get\";\n\nexport const mapCourses = (courses) => {\n  // TODO: handle later when we provide functionality of enrolling courses.\n  // const {enrolledCourses = [], allCourses = []} = courses\n  // const mappedEnrolledCourses = enrolledCourses.map((course) => {\n  //   return {\n  //     id: course.id,\n  //     name: course.name,\n  //     logo: course.logo,\n  //     description: course.short_description,\n  //   }\n  // })\n\n  const mappedAllCourses = courses.map((course) => {\n    return {\n      id: course.id,\n      name: course.name,\n      logo: course.logo,\n      description: course.short_description,\n    };\n  });\n\n  return {\n    // enrolledCourses: mappedEnrolledCourses,\n    allCourses: mappedAllCourses,\n  };\n};\n\n/**\n *\n * @param {Object} contentResponse\n * @param {Object} contentResponse.course.exercises[0] Map exercises in course content\n * typical exercise object from backend.\n * {\n *   content: [{type: \"python\", value: {,…}},…]\n *   course_id: \"116\"\n *   github_link: \"https://github.com/navgurukul/newton/tree/master/if-else/debugging-part1/debugging-question4.md\"\n *   id: \"2531\"\n *   name: \"Question 4    \"\n *   parent_exercise_id: \"2521\"\n *   review_type: \"manual\"\n *   sequence_num: null\n *   slug: \"if-else__debugging-part1/debugging-question4\"\n *   solution: null\n *   submission_type: null\n * }\n */\nexport const mapCourseContent = (contentResponse) => {\n  const { exercises = [] } = get(contentResponse, \"course\", {});\n  const exerciseList = exercises.map((exercise) => {\n    let childExercises = null;\n    if (exercise.childExercises) {\n      childExercises = exercise.childExercises.map((childExercise) => {\n        if (typeof childExercise.content === \"string\") {\n          childExercise.content = [\n            { type: \"markdown\", value: exercise.content },\n          ];\n        }\n        return {\n          content: childExercise.content,\n          githubLink: childExercise.github_link,\n          id: childExercise.id,\n          name: childExercise.name,\n          slug: childExercise.slug,\n        };\n      });\n    }\n    if (typeof exercise.content === \"string\") {\n      exercise.content = [{ type: \"markdown\", value: exercise.content }];\n    }\n    return {\n      content: exercise.content,\n      githubLink: exercise.github_link,\n      id: exercise.id,\n      name: exercise.name,\n      slug: exercise.slug,\n      childExercises: childExercises,\n    };\n  });\n\n  return {\n    exerciseList,\n  };\n};\n","import axios from \"axios\";\nimport { METHODS } from \"../../../services/api\";\n\n/**\n * end-point to get all the courses\n *\n * @param {data} object payload, in this endpoint it will undefined or not needed\n * @param {object} opts\n *\n * @returns {Promise}\n */\nexport const getCourses = () => {\n  return axios({\n    url: `${process.env.REACT_APP_MERAKI_URL}/courses`,\n    method: METHODS.GET,\n    // headers: HeaderFactory(token),\n  });\n};\n\n/**\n * end-point to get content of a course\n *\n * @param {data} object payload\n * @param {String} data.courseId\n * @param {object} opts\n *\n * @returns {Promise}\n */\nexport const getCourseContent = (data) => {\n  const { courseId } = data;\n  return axios({\n    url: `${process.env.REACT_APP_MERAKI_URL}/courses/${courseId}/exercises`,\n    method: METHODS.GET,\n    // headers: HeaderFactory(token),\n  });\n};\n","import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { types, actions } from \"./action\";\nimport { httpStatuses } from \"../../../services/auth\";\nimport { mapCourses, mapCourseContent } from \"./util.js\";\nimport { getCourses, getCourseContent } from \"./api\";\n\n/**\n * Handles getting all the courses\n * @param {object} payload\n */\nfunction* handleGetCourses({ data }) {\n  const coursesResponse = yield call(getCourses, data);\n  if (\n    coursesResponse &&\n    httpStatuses.SUCCESS.includes(coursesResponse.status)\n  ) {\n    const mappedCourses = mapCourses(coursesResponse.data);\n    yield put(actions.getCoursesResolved(mappedCourses));\n  } else {\n    yield put(actions.getCoursesRejected(coursesResponse));\n    alert(\n      `Something went wrong with error status: ${coursesResponse.status} ${coursesResponse.message}`\n    );\n  }\n}\n\n/**\n * Handle getting exercises fo a particular course\n * @param {object} payload\n */\nfunction* handleGetCourseContent({ data }) {\n  const contentResponse = yield call(getCourseContent, data);\n  if (\n    contentResponse &&\n    httpStatuses.SUCCESS.includes(contentResponse.status)\n  ) {\n    const mappedCourseContent = mapCourseContent(contentResponse.data);\n    yield put(actions.getCourseContentResolved(mappedCourseContent));\n  } else {\n    yield put(actions.getCourseContentRejected(contentResponse));\n    alert(\n      `Something went wrong with error status: ${contentResponse.status} ${contentResponse.message}`\n    );\n  }\n}\n\nexport default function* () {\n  yield takeLatest(types.GET_COURSES_INTENT, handleGetCourses);\n  yield takeLatest(types.GET_COURSE_CONTENT_INTENT, handleGetCourseContent);\n}\n","import { fork, all } from \"redux-saga/effects\";\n\nimport User from \"./components/User/redux/saga\";\nimport Class from \"./components/Class/redux/saga\";\nimport Course from \"./components/Course/redux/saga\";\n// import Notifications from './Notifications'\n\nexport default function* () {\n  yield all([fork(User), fork(Class), fork(Course)]);\n}\n","export const types = {\n  RESET_APP: \"RESET_APP\",\n};\n\nexport const actions = {\n  clearAppState() {\n    return {\n      type: types.RESET_APP,\n    };\n  },\n};\n","import { types } from \"./action\";\n\nconst initialState = {\n  loading: false,\n  error: false,\n  data: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.ON_USER_SIGN_INTENT:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: null,\n      };\n    case types.ON_USER_SIGN_INTENT_RESOLVED:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.data,\n      };\n\n    case types.ON_USER_SIGN_INTENT_REJECTED:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n        data: null,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { types } from \"./action\";\nconst initialState = {\n  loading: false,\n  error: false,\n  data: null,\n  allClasses: {\n    loading: false,\n    error: false,\n    data: null,\n  },\n};\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_CLASSES_INTENT:\n      return {\n        ...state,\n        allClasses: {\n          loading: true,\n          error: false,\n          data: null,\n        },\n      };\n    case types.GET_CLASSES_INTENT_RESOLVED:\n      return {\n        ...state,\n        allClasses: {\n          loading: false,\n          error: false,\n          data: action.data,\n        },\n      };\n    case types.GET_CLASSES_INTENT_REJECTED:\n      return {\n        ...state,\n        allClasses: {\n          loading: false,\n          error: action.error,\n          data: null,\n        },\n      };\n    case types.GET_CREATE_CLASS_INTENT:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: null,\n      };\n    case types.GET_CREATE_CLASS_INTENT_RESOLVED:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.data,\n      };\n    case types.GET_CREATE_CLASS_INTENT_REJECTED:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n        data: null,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from \"./action\";\n\nconst initialState = {\n  loading: false,\n  error: false,\n  data: null,\n  courseContent: {\n    loading: false,\n    error: false,\n    data: null,\n  },\n  selectedExercise: {\n    exercise: null,\n    parentExercise: null, // reference to parent exercise in the list\n    index: null, // reference to main exercise in the course exercise list\n    subExerciseIndex: null, // reference to child exercise of an exercise\n  },\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.GET_COURSES_INTENT:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        data: null,\n      };\n    case types.GET_COURSES_INTENT_RESOLVED:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.data,\n      };\n\n    case types.GET_COURSES_INTENT_REJECTED:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n        data: null,\n      };\n\n    case types.GET_COURSE_CONTENT_INTENT:\n      return {\n        ...state,\n        courseContent: {\n          loading: true,\n          error: false,\n          data: null,\n        },\n      };\n\n    case types.GET_COURSE_CONTENT_INTENT_RESOLVED:\n      return {\n        ...state,\n        courseContent: {\n          loading: false,\n          error: false,\n          data: action.data,\n        },\n      };\n\n    case types.GET_COURSE_CONTENT_INTENT_REJECTED:\n      return {\n        ...state,\n        courseContent: {\n          loading: false,\n          error: action.error,\n          data: null,\n        },\n      };\n\n    case types.UPDATE_SELECTED_EXERCISE:\n      return {\n        ...state,\n        selectedExercise: action.data,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\n\nimport { types as appTypes } from \"./components/App/redux/action\";\nimport User from \"./components/User/redux/reducer\";\nimport Class from \"./components/Class/redux/reducer\";\nimport Course from \"./components/Course/redux/reducer\";\n\n// import Notifications from './Notifications'\n\nexport const history = createBrowserHistory();\n\nconst appReducer = combineReducers({\n  User,\n  // Notifications,\n  Class,\n  Course,\n  router: connectRouter(history),\n});\n\nconst rootReducer = (state, action) => {\n  // if we want to clean the redux state, i.e logging out the user\n  if (action.type === appTypes.RESET_APP) {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n// import { routerMiddleware } from 'connected-react-router'\nimport { getUserInitialState, userStateMiddleware } from \"./services/storage\";\n\nimport rootSaga from \"./rootSaga\";\nimport rootReducer from \"./rootReducer\";\n// import UserStorage from './middlewares/UserStorage'\n\nconst composeEnhanced =\n  process.env.NODE_ENV === \"development\" &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : compose;\n\nconst initialStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    getUserInitialState(),\n    composeEnhanced(\n      applyMiddleware(\n        sagaMiddleware,\n        userStateMiddleware\n        // routerMiddleware(history)\n      )\n    )\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default initialStore;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n// import { userHasAccess } from '../../services/auth'\nimport { PATHS } from \"../../constant\";\n\nconst OnlyLoggedIn = (passedProps) => {\n  const { user = {}, component: Component, ...rest } = passedProps;\n\n  // let isAuthorized = false\n  // if (!roles) {\n  //   isAuthorized = true\n  // } else if (User && User.user) {\n  //   isAuthorized = userHasAccess(User.user, roles || [])\n  // }\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return user && user.isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: PATHS.LOGIN,\n              state: { from: props.location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nOnlyLoggedIn.propTypes = {\n  component: PropTypes.any,\n  location: PropTypes.any,\n};\n\nexport default OnlyLoggedIn;\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport OnlyLoggedIn from \"./OnlyLoggedIn\";\n\nconst mapStateToProps = (state) => ({\n  user: state.User.data,\n});\n\nexport const PrivateRoute = withRouter(connect(mapStateToProps)(OnlyLoggedIn));\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport GoogleLogin from \"react-google-login\";\nimport { actions as userActions } from \"../../components/User/redux/action\";\nimport { PATHS } from \"../../constant\";\n\nimport \"./styles.scss\";\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const { loading, data } = useSelector(({ User }) => User);\n  const isAuthenticated = data && data.isAuthenticated;\n\n  function onSignIn(googleUser) {\n    let profile = googleUser.getBasicProfile();\n    let { id_token: idToken } = googleUser.getAuthResponse();\n    const googleData = {\n      id: profile.getId(),\n      name: profile.getName(),\n      imageUrl: profile.getImageUrl(),\n      email: profile.getEmail(),\n      idToken,\n    };\n\n    // let's send the data to our backend.\n    dispatch(userActions.onUserSignin(googleData));\n  }\n\n  const onGoogleLoginFail = (errorResponse) => {\n    // eslint-disable-next-line no-console\n    console.log(\"onGoogle login fail\", errorResponse);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to={PATHS.COURSE} />;\n  }\n\n  return (\n    <div className=\"ng-login\">\n      <div className=\"logo\" />\n      {loading ? (\n        \"...\"\n      ) : (\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n          buttonText=\"Login/Sign Up\"\n          onSuccess={onSignIn}\n          onFailure={onGoogleLoginFail}\n          cookiePolicy={\"single_host_origin\"}\n          className=\"google-login\"\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.scss\";\n\nconst InputField = (props) => {\n  const {\n    type = \"input\",\n    className = \"\",\n    label = \"\",\n    labelClassName = \"\",\n    inputClassName = \"\",\n    ...rest\n  } = props;\n\n  if (type === \"textarea\") {\n    return (\n      <div className={`ng-input-field ${className}`}>\n        <label className={`label ${labelClassName}`}>{label}</label>\n        <textarea className={`textarea-field ${inputClassName}`} {...rest} />\n      </div>\n    );\n  }\n\n  return (\n    <div className={`ng-input-field ${className}`}>\n      <label className={`label ${labelClassName}`}>{label}</label>\n      <input\n        type={type}\n        className={`input-field ${inputClassName}`}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nInputField.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  inputClassName: PropTypes.string,\n  labelClassName: PropTypes.string,\n};\n\nexport default InputField;\n","export const TIME_CONSTANT = {\n  CLASS_START_DATE: \"start_time\",\n  CLASS_END_DATE: \"end_time\",\n  CLASS_START_TIME: \"class_start_time\",\n  CLASS_END_TIME: \"class_end_time\",\n};\n\nexport const CLASS_FORM_FIELDS = [\n  {\n    id: \"title\",\n    name: \"title\",\n    label: \"Title*\",\n    required: true,\n  },\n  {\n    name: \"description\",\n    label: \"Description*\",\n    type: \"textarea\",\n    required: true,\n  },\n  {\n    name: \"facilitator_name\",\n    label: \"Facilator Name*\",\n  },\n  {\n    name: \"facilitator_email\",\n    label: \"Facilator Email*\",\n    type: \"email\",\n  },\n  {\n    // \"start_time\": \"2020-11-22\",\n    name: TIME_CONSTANT.CLASS_START_DATE,\n    label: \"Start Date*\",\n    type: \"date\",\n    inputClassName: \"small-text\",\n    required: true,\n  },\n  {\n    name: TIME_CONSTANT.CLASS_START_TIME,\n    id: TIME_CONSTANT.CLASS_START_TIME,\n    label: \"Start Time*\",\n    type: \"time\",\n    inputClassName: \"small-text\",\n    required: true,\n  },\n  {\n    name: TIME_CONSTANT.CLASS_END_TIME,\n    id: TIME_CONSTANT.CLASS_END_TIME,\n    label: \"End Time*\",\n    type: \"time\",\n    inputClassName: \"small-text\",\n    required: true,\n  },\n  {\n    name: \"category_id\",\n    label: \"Category Id*\",\n    type: \"text\",\n    list: \"category\",\n    inputClassName: \"small-text\",\n    onKeyDown: (e) => e.preventDefault(),\n    required: true,\n  },\n  {\n    name: \"lang\",\n    label: \"Language*\",\n    type: \"text\",\n    list: \"language\",\n    inputClassName: \"small-text\",\n    onKeyDown: (e) => e.preventDefault(),\n    required: true,\n  },\n  {\n    name: \"type\",\n    label: \"Type*\",\n    type: \"text\",\n    list: \"type\",\n    inputClassName: \"small-text\",\n    onKeyDown: (e) => e.preventDefault(),\n    required: true,\n  },\n  {\n    name: \"course_id\",\n    label: \"Course\",\n    list: \"Course\",\n    type: \"text\",\n    onKeyDown: (e) => e.preventDefault(),\n  },\n  {\n    name: \"video_id\",\n    label: \"Youtube Video Id\",\n  },\n  {\n    name: \"exercise_id\",\n    label: \"Exercise Id\",\n    inputClassName: \"small-text\",\n  },\n\n  {\n    name: \"material_link\",\n    label: \"Material Link\",\n  },\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.scss\";\n\nconst Loader = ({ className = \"\", pageLoader = false }) => {\n  return (\n    <div className={`${className} ${pageLoader ? \"ng-page-loader\" : \"loader\"}`}>\n      <div className=\"idsEllipsis\">\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  className: PropTypes.string,\n  pageLoader: PropTypes.bool,\n  // If main page loading pass this prop value as true\n};\n\nexport default Loader;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { METHODS } from \"../../services/api\";\nimport InputField from \"../common/FormComponent/InputField\";\nimport { TIME_CONSTANT, CLASS_FORM_FIELDS } from \"./constant\";\nimport { actions } from \"./redux/action\";\nimport Loader from \"../common/Loader\";\n\nimport \"./styles.scss\";\n\nconst SelectOptions = () => {\n  const user = useSelector(({ User }) => User);\n  const [allCourse, setAllCourse] = useState([]);\n\n  useEffect(() => {\n    axios({\n      method: METHODS.GET,\n      url: `${process.env.REACT_APP_MERAKI_URL}/apiDocs/courses`,\n      headers: {\n        accept: \"application/json\",\n        Authorization: user.data.token,\n      },\n    }).then((res) => {\n      setAllCourse(res.data.allCourses);\n    });\n  }, []);\n\n  return (\n    <div>\n      {/* Select box data items. HTML 5 way to render select box */}\n      <datalist id=\"language\">\n        <option value=\"English\">English</option>\n        <option value=\"Hindi\">Hindi</option>\n        <option value=\"Telugu\">Telugu</option>\n        <option value=\"Tamil\">Tamil</option>\n      </datalist>\n      <datalist id=\"type\">\n        <option value=\"workshop\">Workshop</option>\n        <option value=\"Doubt Class\">Doubt Class</option>\n      </datalist>\n      <datalist id=\"category\">\n        <option value=\"3\">Programming</option>\n      </datalist>\n      <datalist id=\"Course\">\n        {allCourse.map((item, index) => {\n          return <option key={index} data-value={item.id} value={item.name} />;\n        })}\n      </datalist>\n    </div>\n  );\n};\n\nfunction Class() {\n  const dispatch = useDispatch();\n  const user = useSelector(({ User }) => User);\n  const rolesList = user.data.user.rolesList;\n  const { loading } = useSelector(({ Class }) => Class);\n  const handleTimeValicationAndCreateClass = (payload) => {\n    const classStartTime = moment(\n      `${payload[TIME_CONSTANT.CLASS_START_DATE]} ${\n        payload[TIME_CONSTANT.CLASS_START_TIME]\n      }`\n    );\n    const classEndTime = moment(\n      `${payload[TIME_CONSTANT.CLASS_START_DATE]} ${\n        payload[TIME_CONSTANT.CLASS_END_TIME]\n      }`\n    );\n    if (classStartTime.valueOf() > classEndTime.valueOf()) {\n      alert(\"Class end time must be later than class start time.\");\n      // Making the class end time field focused, so user can edit it.\n      return document.getElementById(TIME_CONSTANT.CLASS_END_TIME).focus();\n    }\n    // remove the unnecessary time fields and add date parameter\n    delete payload[TIME_CONSTANT.CLASS_END_TIME];\n    delete payload[TIME_CONSTANT.CLASS_START_TIME];\n    payload[TIME_CONSTANT.CLASS_START_DATE] = `${moment(classStartTime).format(\n      \"YYYY-MM-DDTHH:mm:ss\"\n    )}Z`;\n    payload[TIME_CONSTANT.CLASS_END_DATE] = `${moment(classEndTime).format(\n      \"YYYY-MM-DDTHH:mm:ss\"\n    )}Z`;\n    dispatch(actions.createClass(payload));\n  };\n\n  const onFormSubmit = (event) => {\n    event && event.preventDefault();\n    const formData = new FormData(event.target);\n    const formFields = {};\n\n    const languageMap = {\n      Hindi: \"hi\",\n      Telugu: \"te\",\n      English: \"en\",\n      Tamil: \"ta\",\n      \"Doubt Class\": \"doubt_class\",\n    };\n\n    for (let [fieldName, value] of formData.entries()) {\n      // Only going to take the field in payload if the\n      // input field is not empty.\n\n      // tbd: hack to fix bug, replace appropriate datalist with select later\n      if (fieldName === \"course_id\" && value) {\n        let courseElement = document.getElementById(\"Course\");\n        let selectedOptionElement = courseElement.querySelector(\n          'option[value=\"' + value + '\"]'\n        );\n        if (selectedOptionElement) {\n          value = selectedOptionElement.dataset.value;\n        }\n      }\n      if (value) {\n        if (languageMap[value]) {\n          formFields[fieldName] = languageMap[value];\n        } else {\n          formFields[fieldName] = value;\n        }\n      }\n    }\n\n    handleTimeValicationAndCreateClass(formFields);\n  };\n\n  const renderClassFields = () => {\n    return CLASS_FORM_FIELDS.filter((field) => {\n      if (\n        rolesList.indexOf(\"classAdmin\") > -1 ||\n        rolesList.indexOf(\"dumbeldore\") > -1\n      ) {\n        return true;\n      }\n\n      if (\n        field.name === \"facilitator_email\" ||\n        field.name === \"facilitator_name\"\n      ) {\n        return false;\n      }\n      return true;\n    }).map((field, index) => <InputField {...field} key={index} />);\n  };\n  return (\n    <div className=\"ng-create-class\">\n      <h2 className=\"title\">Create A Class </h2>\n      <form className=\"form\" onSubmit={onFormSubmit}>\n        {renderClassFields()}\n        <button type=\"submit\" className=\"submit\" disabled={loading}>\n          {loading ? <Loader /> : \"CREATE CLASS\"}\n        </button>\n      </form>\n      <SelectOptions />\n    </div>\n  );\n}\nexport default Class;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { METHODS } from \"../../../services/api\";\nimport \"./styles.scss\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nfunction ClassCard(props) {\n  const user = useSelector(({ User }) => User);\n\n  const { item, index } = props;\n\n  const classStartTime = item.start_time && item.start_time.replace(\"Z\", \"\");\n  const classEndTime = item.end_time && item.end_time.replace(\"Z\", \"\");\n\n  const languageMap = {\n    hi: \"Hindi\",\n    te: \"Telugu\",\n    en: \"English\",\n    ta: \"Tamil\",\n    doubt_class: \"Doubt Class\",\n    workshop: \"Workshop\",\n  };\n\n  const rolesList = user.data.user.rolesList;\n  let flag = false;\n  rolesList.map((role) => {\n    role === \"classAdmin\" || role === \"dumbeldore\"\n      ? (flag = true)\n      : (flag = false);\n  });\n\n  const deleteHandler = (id) => {\n    const notify = () => {\n      toast.success(\" Deleted the class successfully\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        autoClose: 5000,\n      });\n    };\n    return axios({\n      method: METHODS.DELETE,\n      url: `${process.env.REACT_APP_MERAKI_URL}/apiDocs/classes/${id}`,\n      headers: {\n        accept: \"application/json\",\n        Authorization: user.data.token,\n      },\n    }).then(() => {\n      notify();\n    });\n  };\n\n  return (\n    <div key={index} className=\"class-card\">\n      <div className=\"card-content\">\n        <div className=\"card-heading\">\n          <div className=\"title\">{item.title}</div>\n          <div className=\"class-type\">{languageMap[item.type]}</div>\n        </div>\n        <div className=\"class-detail\">\n          <p>Facilitator Name : {item.facilitator.name} </p>\n          <p>Language : {languageMap[item.lang]} </p>\n          <p>Date:{moment(classStartTime).format(\"DD-MM-YYYY\")} </p>\n          <p>\n            Time:{moment(classStartTime).format(\"hh:mm a\")} -{\" \"}\n            {moment(classEndTime).format(\"hh:mm a\")}\n          </p>\n          {item.facilitator_id == user.data.user.id || flag ? (\n            <button\n              className=\"delete-button\"\n              onClick={() => deleteHandler(item.id)}\n            >\n              Delete\n            </button>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ClassCard;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { actions as classActions } from \"../redux/action\";\nimport Loader from \"../../common/Loader\";\nimport ClassCard from \"../ClassCard\";\nimport \"./styles.scss\";\n\nfunction ClassList() {\n  const dispatch = useDispatch();\n\n  const { loading, data = [] } = useSelector(({ Class }) => Class.allClasses);\n\n  useEffect(() => {\n    dispatch(classActions.getClasses());\n  }, [dispatch]);\n\n  if (loading) {\n    return <Loader pageLoader={true} />;\n  }\n\n  return (\n    <div>\n      <div className=\"ng-upcoming-class\">\n        {data && data.length > 0 ? (\n          data.map((item, index) => {\n            return <ClassCard item={item} key={index} />;\n          })\n        ) : (\n          <div className=\"message\">\n            <h2>No Classes Today</h2>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default ClassList;\n","import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.scss\";\n\nconst Modal = (props) => {\n  const modalRef = useRef(null);\n  const onClose = props.onClose;\n\n  const handleClose = () => {\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleClick = (event) => {\n      if (document.getElementById(\"main-modal\").contains(event.target)) {\n        // clicked inside the modal box. so not going to close it\n      } else {\n        if (onClose) {\n          onClose();\n        }\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, [onClose]);\n\n  return (\n    <div className={`modalBackground ${props.backGroundClassName}`}>\n      <div\n        id=\"main-modal\"\n        className={`modal ${props.className}`}\n        ref={modalRef}\n      >\n        <i\n          className={`zmdi zmdi-close close ${props.closeStyle}`}\n          onClick={handleClose}\n        ></i>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  backGroundClassName: PropTypes.string,\n  closeStyle: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n};\n\nModal.defaultProps = {\n  className: \"\",\n  backGroundClassName: \"\",\n  closeStyle: \"\",\n};\n\nexport default Modal;\n","import React from \"react\";\nimport CreateClassComponent from \"../../components/Class\";\nimport ClassesList from \"../../components/Class/ClassList\";\nimport Modal from \"../../components/common/Modal\";\nimport \"../../components/Class/ClassList/styles.scss\";\n\nfunction ToggleClassFormModal() {\n  const [showModel, setShowModel] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setShowModel(!showModel);\n  };\n  return (\n    <div>\n      <button className=\"create-class-button\" onClick={handleClickOpen}>\n        CREATE A CLASS\n      </button>\n      <ClassesList />\n      {showModel ? (\n        <Modal onClose={() => handleClickOpen()}>\n          <CreateClassComponent />\n        </Modal>\n      ) : null}\n    </div>\n  );\n}\n\nexport default ToggleClassFormModal;\n","export const COURSE_CARD_COLORS = [\n  \"#FFA4A4\",\n  \"#A4C5FF\",\n  \"#CBE0C4\",\n  \"#B7A4FF\",\n  \"#A4C5EE\",\n  \"#CBE0B4\",\n  \"#FFA4C4\",\n  \"#B7A4GG\",\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { PATHS } from \"../../../constant.js\";\nimport { COURSE_CARD_COLORS } from \"../constant\";\nimport \"./styles.scss\";\n\nfunction CourseCard(props) {\n  const { course, index } = props;\n\n  const randomBackgroundColor = COURSE_CARD_COLORS[index % 7];\n  return (\n    <a\n      className=\"ng-course-card\"\n      href={`${PATHS.COURSE}/${course.id}?name=${course.name}`}\n      key={index}\n    >\n      <div\n        className=\"upper-section\"\n        style={{ background: randomBackgroundColor }}\n      >\n        <img src={course.logo} alt={\"\"} className=\"logo\" />\n      </div>\n      <div className=\"bottom-section\">\n        <div className=\"title\">{course.name}</div>\n      </div>\n    </a>\n  );\n}\n\nCourseCard.propTypes = {\n  course: PropTypes.object.isRequired,\n};\n\nexport default CourseCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CourseCard from \"../CourseCard\";\nimport \"./styles.scss\";\n\nconst CourseList = ({ list, title }) => {\n  if (list && list.length) {\n    return (\n      <div className=\"ng-course-list\">\n        <h2>{title}</h2>\n        <div className=\"cards\">\n          {list.map((course, index) => (\n            <CourseCard\n              key={`${course.id}-${index}`}\n              course={course}\n              index={index}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return \"\";\n};\n\nCourseList.propTypes = {\n  list: PropTypes.array,\n  title: PropTypes.string.isRequired,\n};\n\nexport default CourseList;\n","import React from \"react\";\n\nimport \"./styles.scss\";\n\nfunction SearchBox(props) {\n  return (\n    <div className=\"ng-search\">\n      <input\n        type=\"text\"\n        placeholder=\"Search for a course\"\n        onChange={props.onChange}\n        value={props.value}\n      />\n      <button type=\"submit\">\n        <i className=\"fa fa-search\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport get from \"lodash/get\";\n\nimport { actions as courseActions } from \"./redux/action\";\nimport CourseList from \"./CourseList\";\nimport SearchBox from \"../common/SearchBox\";\nimport Loader from \"../common/Loader\";\nimport \"./styles.scss\";\n\nfunction Course() {\n  const dispatch = useDispatch();\n  const { loading, data } = useSelector(({ Course }) => Course);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(courseActions.getCourses());\n  }, [dispatch]);\n\n  if (loading) {\n    return <Loader pageLoader={true} />;\n  }\n\n  const handleSearchChange = (e) => {\n    e.preventDefault();\n    setSearch(e.target.value);\n  };\n\n  let filteredCourse;\n  if (data) {\n    filteredCourse = data.allCourses.filter((names) => {\n      return names.name.toLowerCase().includes(search.toLowerCase());\n    });\n  }\n\n  return (\n    <div>\n      <SearchBox onChange={handleSearchChange} value={search} />\n      {search.length > 0 ? (\n        <h1 className=\"ng-course\">\n          <CourseList\n            list={filteredCourse}\n            title=\"Aap inn courses ko search kiya hai\"\n          />\n        </h1>\n      ) : (\n        <h1 className=\"ng-course\">\n          <CourseList\n            list={get(data, \"enrolledCourses\")}\n            title=\"Aap in courses mein enrolled hai\"\n          />\n          <CourseList\n            list={get(data, \"allCourses\")}\n            title=\"Aap yeh courses mein enroll kar sakte hai\"\n          />\n        </h1>\n      )}\n    </div>\n  );\n}\n\nexport default Course;\n","import React from \"react\";\n\nimport CourseComponent from \"../../components/Course\";\nimport \"./styles.scss\";\n\nfunction Course() {\n  return (\n    <div className=\"ng-course-container\">\n      <h2>Hello, There</h2>\n      <CourseComponent />\n    </div>\n  );\n}\n\nexport default Course;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./styles.scss\";\n\nconst Arrow = (props) => {\n  const { className = \"\", left, onClick } = props;\n\n  return (\n    <div\n      className={`ng-arrow ${className} ${left && \"ng-left\"}`}\n      onClick={onClick}\n    />\n  );\n};\n\nArrow.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Arrow;\n","import React from \"react\";\n// import PropTypes from 'prop-types'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport get from \"lodash/get\";\n\nimport { actions as courseActions } from \"../../redux/action\";\nimport Arrow from \"../../../common/Arrow\";\n\nconst GoBackArrow = () => {\n  const dispatch = useDispatch();\n  const {\n    courseContent: { data },\n    selectedExercise,\n  } = useSelector(({ Course }) => Course);\n  // comparision with 0 to check whether first sub exercise has been selected or not.\n  const isLastExerciseSelected =\n    get(selectedExercise, \"index\") === get(data, `exerciseList.length`) - 1;\n\n  const hasSubExercises =\n    get(selectedExercise, \"parentExercise.childExercises.length\") ||\n    get(selectedExercise, \"exercise.childExercises.length\");\n  const isChildSelected =\n    selectedExercise.subExerciseIndex === 0 ||\n    selectedExercise.subExerciseIndex;\n  const isLastChild =\n    isChildSelected &&\n    selectedExercise.subExerciseIndex ===\n      get(selectedExercise, \"parentExercise.childExercises.length\") - 1;\n  if (\n    (isLastExerciseSelected && !hasSubExercises) ||\n    (isLastExerciseSelected && hasSubExercises && isLastChild)\n  ) {\n    return <div />;\n  }\n\n  const handleForwardClick = () => {\n    const { exercise, index, subExerciseIndex } = selectedExercise;\n    if ((subExerciseIndex === 0 || subExerciseIndex) && !isLastChild) {\n      const mainExercise = get(data, `exerciseList[${index}]`);\n      const nextSubExerciseIndex = subExerciseIndex + 1;\n      const selectedChildExercise =\n        mainExercise.childExercises[nextSubExerciseIndex];\n      const selectedExerciseInfo = {\n        exercise: selectedChildExercise,\n        parentExercise: mainExercise,\n        index,\n        subExerciseIndex: nextSubExerciseIndex,\n      };\n      dispatch(courseActions.updateSelectedExercise(selectedExerciseInfo));\n    } else if (!subExerciseIndex && exercise.childExercises) {\n      const mainExercise = get(data, `exerciseList[${index}]`);\n      const selectedChildExercise = mainExercise.childExercises[0];\n      const selectedExerciseInfo = {\n        exercise: selectedChildExercise,\n        parentExercise: mainExercise,\n        index,\n        subExerciseIndex: 0,\n      };\n      dispatch(courseActions.updateSelectedExercise(selectedExerciseInfo));\n    } else {\n      const nextIndex = index + 1;\n      const nextExercise = get(data, `exerciseList[${nextIndex}]`);\n      const selectedMainExercise = { exercise: nextExercise, index: nextIndex };\n      dispatch(courseActions.updateSelectedExercise(selectedMainExercise));\n    }\n  };\n\n  return <Arrow onClick={handleForwardClick} />;\n};\n\nexport default GoBackArrow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactMarkdown from \"react-markdown\";\nimport htmlParser from \"react-markdown/plugins/html-parser\";\nimport YouTube from \"react-youtube\";\nimport get from \"lodash/get\";\n\nimport \"./styles.scss\";\n\n// See https://github.com/aknuds1/html-to-react#with-custom-processing-instructions\n// for more info on the processing instructions\nconst parseHtml = htmlParser({\n  isValidNode: (node) => node.type !== \"script\",\n  processingInstructions: [\n    /* ... */\n  ],\n});\n\nconst RenderContent = ({ data }) => {\n  if (data.type === \"markdown\") {\n    return (\n      <ReactMarkdown\n        source={data.value}\n        escapeHtml={false}\n        astPlugins={[parseHtml]}\n      />\n    );\n  } else if (data.type === \"python\") {\n    return (\n      <code className=\"language-python code-block\">\n        {\" \"}\n        <br />\n        {get(data, \"value.code\")} <br />\n      </code>\n    );\n  } else if (data.type === \"bash\") {\n    return (\n      <code className=\"language-bash code-block\">\n        {\" \"}\n        {get(data, \"value.code\")}{\" \"}\n      </code>\n    );\n  } else if (data.type === \"image\") {\n    return <img className=\"image\" src={get(data, \"value.url\")} alt=\"content\" />;\n  } else if (data.type === \"video\") {\n    return <YouTube className={\"youtube-video\"} videoId={data.value} />;\n  } else if (data.type === \"youtube\") {\n    return <YouTube className={\"youtube-video\"} videoId={data.value} />;\n  }\n  return \"\";\n};\n\nfunction ExerciseContent(props) {\n  const { content = [] } = props;\n\n  if (!content) {\n    return \"\";\n  }\n\n  return (\n    <div className=\"ng-exercise-content\">\n      {content.map((contentItem, index) => (\n        <RenderContent data={contentItem} key={index} />\n      ))}\n    </div>\n  );\n}\n\nExerciseContent.propTypes = {\n  content: PropTypes.array,\n};\n\nexport default ExerciseContent;\n","import React from \"react\";\nimport get from \"lodash/get\";\nimport ExerciseContent from \"../ExerciseContent\";\n\nconst EditOnGithub = (props) => {\n  return (\n    <a\n      href={props.link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"github-link\"\n    >\n      Edit on Github\n    </a>\n  );\n};\n\nconst Exercise = (props) => {\n  const { selectedExercise } = props;\n\n  return (\n    <div>\n      <h2>{get(selectedExercise, \"exercise.name\")}</h2>\n      <ExerciseContent content={get(selectedExercise, \"exercise.content\")} />\n      <EditOnGithub link={`${get(selectedExercise, \"exercise.githubLink\")}`} />\n    </div>\n  );\n};\n\nexport default Exercise;\n","import React from \"react\";\n// import PropTypes from 'prop-types'\n\nimport \"./styles.scss\";\n\nconst CollapseArrow = (props) => {\n  const { haveChildExercises, showChildExercise, onClick } = props;\n  if (haveChildExercises) {\n    return (\n      <div className=\"ng-collapse-arrow\" onClick={onClick}>\n        {showChildExercise ? <span>&or;</span> : <span>&and;</span>}\n      </div>\n    );\n  }\n  return \"\";\n};\n\nexport default CollapseArrow;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CollapseArrow from \"./CollapseArrow\";\nimport \"./styles.scss\";\n\n//TODO: move to independent file\nconst ExerciseLogo = ({ selected }) => {\n  return (\n    <div className=\"logo\">\n      <svg\n        className={selected ? \"selected\" : \"\"}\n        focusable=\"false\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n        role=\"presentation\"\n      >\n        <g>\n          <path d=\"M19 3H4.99c-1.11 0-1.98.89-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.11-.9-2-2-2zm0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19v10z\"></path>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nconst SubExerciseLogo = ({ selected }) => {\n  return (\n    <div className=\"logo child-exercise-logo\">\n      <svg\n        className={selected ? \"selected\" : \"\"}\n        focusable=\"false\"\n        viewBox=\"0 0 24 24\"\n        aria-hidden=\"true\"\n        role=\"presentation\"\n      >\n        <g>\n          <path d=\"M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13L3.74 7.84 12 3l8.26 4.84L12 13z\"></path>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\n//TODO: move to independent component file\nconst ExerciseTitle = (props) => {\n  const { isChildExercise, selected, exercise } = props;\n\n  return (\n    <div\n      className={`content ${isChildExercise && \"child-exercise\"}`}\n      onClick={props.onClick}\n    >\n      {isChildExercise ? (\n        <SubExerciseLogo selected={selected} />\n      ) : (\n        <ExerciseLogo selected={selected} />\n      )}\n      <div className=\"title\">{exercise.name}</div>\n    </div>\n  );\n};\n\nfunction Exercise(props) {\n  const { exercise, selectedExercise, index, onClick } = props;\n  const haveChildExercises = exercise.childExercises;\n  const selected = selectedExercise.index === index;\n  // here by kids, we mean subexercises\n  const isSelectedAndHaveKids = selected && haveChildExercises;\n  const [showChildExercise, setShowChildExercise] = useState(\n    isSelectedAndHaveKids\n  );\n\n  useEffect(() => {\n    setShowChildExercise(isSelectedAndHaveKids);\n  }, [isSelectedAndHaveKids]);\n\n  const handleExerciseClick = (index, subExerciseIndex) => {\n    if (onClick) {\n      onClick({ index, subExerciseIndex: subExerciseIndex });\n    }\n  };\n\n  const handleMainExerciseClick = () => {\n    handleExerciseClick(index);\n    if (haveChildExercises) {\n      setShowChildExercise(!showChildExercise);\n    }\n  };\n\n  const containerClasses =\n    selected && !haveChildExercises ? \"ng-exercise-selected\" : \"\";\n  return (\n    <div\n      className={`ng-exercise  ${containerClasses} ${\n        showChildExercise && \"ng-exercise-child\"\n      }`}\n      key={index}\n    >\n      <ExerciseTitle\n        selected={selected}\n        exercise={exercise}\n        onClick={handleMainExerciseClick}\n      />\n      <CollapseArrow\n        haveChildExercises={haveChildExercises}\n        onClick={() => setShowChildExercise(!showChildExercise)}\n        showChildExercise={showChildExercise}\n      />\n      {showChildExercise &&\n        exercise.childExercises.map((childExercise, subExerciseIndex) => {\n          return (\n            <ExerciseTitle\n              isChildExercise={haveChildExercises}\n              exercise={childExercise}\n              selected={subExerciseIndex === selectedExercise.subExerciseIndex}\n              onClick={() => handleExerciseClick(index, subExerciseIndex)}\n              key={subExerciseIndex}\n            />\n          );\n        })}\n    </div>\n  );\n}\n\nExercise.propTypes = {\n  exercise: PropTypes.object.isRequired,\n};\n\nexport default Exercise;\n","import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport get from \"lodash/get\";\n\nimport { actions as courseActions } from \"../../redux/action\";\nimport Exercise from \"./Exercise\";\nimport \"./styles.scss\";\n\nfunction ExerciseList(props) {\n  const { list = [] } = props;\n  const dispatch = useDispatch();\n  const {\n    courseContent: { data },\n    selectedExercise,\n  } = useSelector(({ Course }) => Course);\n\n  const handleExerciseChange = useCallback(\n    (clickedExerciseInfo) => {\n      const { index, subExerciseIndex } = clickedExerciseInfo;\n      const mainExercise = get(data, `exerciseList[${index}]`);\n      // if child exercise was clicked, also handling fir\n      if (subExerciseIndex === 0 || subExerciseIndex) {\n        const selectedChildExercise =\n          mainExercise.childExercises[subExerciseIndex];\n        const selectedExerciseInfo = {\n          exercise: selectedChildExercise,\n          parentExercise: mainExercise,\n          index,\n          subExerciseIndex,\n        };\n        dispatch(courseActions.updateSelectedExercise(selectedExerciseInfo));\n      } else {\n        const selectedMainExercise = { exercise: mainExercise, index };\n        dispatch(courseActions.updateSelectedExercise(selectedMainExercise));\n      }\n    },\n    [data, dispatch]\n  );\n\n  return (\n    <div className=\"ng-exercise-list\">\n      {/* <div className='enroll'>\n        ENROLL IN COURSE\n      </div> */}\n      {list.map((exercise, index) => {\n        return (\n          <Exercise\n            exercise={exercise}\n            index={index}\n            selectedExercise={selectedExercise}\n            onClick={handleExerciseChange}\n            key={index}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nExerciseList.propTypes = {\n  list: PropTypes.array,\n};\n\nexport default ExerciseList;\n","import React from \"react\";\n// import PropTypes from 'prop-types'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport get from \"lodash/get\";\n\nimport { actions as courseActions } from \"../../redux/action\";\nimport Arrow from \"../../../common/Arrow\";\n\nconst GoBackArrow = () => {\n  const dispatch = useDispatch();\n  const {\n    courseContent: { data },\n    selectedExercise,\n  } = useSelector(({ Course }) => Course);\n  // comparision with 0 to check whether first sub exercise has been selected or not.\n  const isChildSelected =\n    selectedExercise.subExerciseIndex === 0 ||\n    selectedExercise.subExerciseIndex;\n  const isFirstExerciseSelected = get(selectedExercise, \"index\") === 0;\n  const isFirstChildSelected = get(selectedExercise, \"subExerciseIndex\") === 0;\n  if (isFirstExerciseSelected && !isChildSelected) {\n    return <div />;\n  }\n\n  const handleBackClick = () => {\n    const { parentExercise, index, subExerciseIndex } = selectedExercise;\n    if (isFirstChildSelected) {\n      // selecting the parent exercise\n      const selectedMainExercise = { exercise: parentExercise, index };\n      dispatch(courseActions.updateSelectedExercise(selectedMainExercise));\n    } else if (subExerciseIndex) {\n      const mainExercise = get(data, `exerciseList[${index}]`);\n      const previousSubExerciseIndex = subExerciseIndex - 1;\n      const selectedChildExercise =\n        mainExercise.childExercises[previousSubExerciseIndex];\n      const selectedExerciseInfo = {\n        exercise: selectedChildExercise,\n        parentExercise: mainExercise,\n        index,\n        subExerciseIndex: previousSubExerciseIndex,\n      };\n      dispatch(courseActions.updateSelectedExercise(selectedExerciseInfo));\n    } else {\n      const previousExerciseIndex = index - 1;\n      const previousExercise = get(\n        data,\n        `exerciseList[${previousExerciseIndex}]`\n      );\n      let selectedMainExercise = {};\n      // if previous exercise has child exercises than we will select the last child exercise to render.\n      const childExercises = previousExercise.childExercises || [];\n      if (childExercises.length) {\n        const lastChildExerciseIndex = childExercises.length - 1;\n        selectedMainExercise = {\n          exercise: childExercises[lastChildExerciseIndex],\n          parentExercise: previousExercise,\n          index: previousExerciseIndex,\n          subExerciseIndex: lastChildExerciseIndex,\n        };\n      } else {\n        selectedMainExercise = {\n          exercise: previousExercise,\n          index: previousExerciseIndex,\n        };\n      }\n      dispatch(courseActions.updateSelectedExercise(selectedMainExercise));\n    }\n  };\n\n  return <Arrow left onClick={handleBackClick} />;\n};\n\nexport default GoBackArrow;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { PATHS } from \"../../constant\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport get from \"lodash/get\";\n\nimport { actions as courseActions } from \"../../components/Course/redux/action\";\nimport GoForwardArrow from \"../../components/Course/Content/GoForwardArrow\";\nimport Exercise from \"../../components/Course/Content/Exercise\";\nimport ExerciseList from \"../../components/Course/Content/ExerciseList\";\nimport GoBackArrow from \"../../components/Course/Content/GoBackArrow\";\nimport Loader from \"../../components/common/Loader\";\nimport \"./styles.scss\";\n\nconst getExerciseIdFromUrl = () => {\n  let exerciseId;\n\n  if (window.location.href.includes(\"exercise\")) {\n    exerciseId = window.location.href.split(\"/\").pop();\n  }\n  return exerciseId;\n};\n\nfunction CourseContent(props) {\n  const history = useHistory();\n  let { url, path } = useRouteMatch();\n\n  const dispatch = useDispatch();\n  const {\n    courseContent: { loading, data },\n    selectedExercise,\n  } = useSelector(({ Course }) => Course);\n\n  useEffect(() => {\n    const exerciseId = get(selectedExercise, \"exercise.id\");\n    let url = window.location.href;\n    window.localStorage.setItem(\n      \"lastExerciseUrl\",\n      `${url}/exercise/${exerciseId}`\n    );\n    const exercise = get(selectedExercise, \"exercise.name\");\n    window.localStorage.setItem(\"exerciseName\", exercise);\n  }, [selectedExercise]);\n\n  // get the course id, and pass it in the component.\n  const courseName = get(props, \"location.search\");\n  const params = new URLSearchParams(courseName);\n  const courseTitle = params.get(\"name\");\n  const courseId = get(props, \"match.params.courseId\");\n\n  useEffect(() => {\n    dispatch(courseActions.getCourseContent({ courseId: courseId }));\n  }, [dispatch, courseId]);\n\n  useEffect(() => {\n    let exerciseIdFromParams = getExerciseIdFromUrl();\n    const firstExercise = get(data, \"exerciseList[0]\");\n    let defaultExercise = firstExercise,\n      defaultExerciseIndex = 0;\n\n    // exercises loaded\n    if (firstExercise) {\n      // set default exercise if the exercise id present in the url and is valid\n      // TBD: Ideally, when navigating to a course content page, the first exercise should be pre-computed and the url should be course/:courseId/exercise/:exerciseId so we can always use the exerciseId from the params to set the default exercise.\n      if (exerciseIdFromParams) {\n        const exerciseFromParamsIndex = data.exerciseList.findIndex(\n          (exercise) => {\n            return exercise.id === exerciseIdFromParams;\n          }\n        );\n        if (exerciseFromParamsIndex !== -1) {\n          defaultExercise = data.exerciseList[exerciseFromParamsIndex];\n          defaultExerciseIndex = exerciseFromParamsIndex;\n        }\n      }\n\n      const selectedExerciseInfo = {\n        exercise: defaultExercise,\n        index: defaultExerciseIndex,\n      };\n\n      dispatch(courseActions.updateSelectedExercise(selectedExerciseInfo));\n    }\n  }, [dispatch, data]);\n\n  useEffect(() => {\n    const exerciseId = get(selectedExercise, \"exercise.id\");\n    if (exerciseId) {\n      history.push(`${url}/exercise/${exerciseId}`);\n    }\n  }, [selectedExercise, history, url]);\n\n  if (loading) {\n    return <Loader pageLoader={true} />;\n  }\n\n  return (\n    <div className=\"ng-course-content\">\n      <div className=\"content\">\n        <h1>{courseTitle}</h1>\n        <Switch>\n          <Route path={`${path}${PATHS.EXERCISE}`}>\n            <Exercise data={data} selectedExercise={selectedExercise} />\n          </Route>\n        </Switch>\n        <div className=\"arrow-row\">\n          <GoBackArrow />\n          <GoForwardArrow />\n        </div>\n      </div>\n      <ExerciseList list={get(data, \"exerciseList\")} />\n    </div>\n  );\n}\n\nexport default CourseContent;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { PrivateRoute } from \"./Routes\";\n// import { userRoles } from '../services/auth'\nimport { PATHS } from \"../constant\";\nimport Login from \"../pages/Login\";\nimport CreateClass from \"../pages/CreateClass\";\nimport Course from \"../pages/Course\";\nimport CourseContent from \"../pages/CourseContent\";\n\n// import Classes from '../pages/classes'\n\nconst Routing = () => {\n  return (\n    <>\n      {/* Public routes */}\n      {/* Route home page to login in  */}\n      <Route exact path={PATHS.HOME_PATH} component={Course} />\n      <Route exact path={PATHS.COURSE} component={Course} />\n      <Route path={PATHS.COURSE_CONTENT} component={CourseContent} />\n      <Route exact path={PATHS.LOGIN} component={Login} />\n      {/* Private routes */}\n      {/* <PrivateRoute\n        exact\n        path={ PATHS.CLASS }\n        component={ Class }\n      />*/}\n      <PrivateRoute exact path={PATHS.CLASS} component={CreateClass} />\n    </>\n  );\n};\n\nexport default Routing;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { PATHS } from \"../../constant\";\nimport { actions as userActions } from \"../User/redux/action\";\n\nimport \"./styles.scss\";\n\nconst AuthenticatedHeaderOption = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <a className=\"link\" href={PATHS.COURSE}>\n        Courses\n      </a>\n      <a className=\"link\" href={PATHS.CLASS}>\n        Classes\n      </a>\n      <div className=\"logout\" onClick={() => dispatch(userActions.logout())}>\n        Logout\n      </div>\n    </>\n  );\n};\n\nconst PublicMenuOption = () => {\n  return (\n    <>\n      <a className=\"link\" href={PATHS.COURSE}>\n        Courses\n      </a>\n      <a className=\"login\" href={PATHS.LOGIN}>\n        Login/Signup\n      </a>\n    </>\n  );\n};\n\nfunction Header() {\n  const { data } = useSelector(({ User }) => User);\n  const isAuthenticated = data && data.isAuthenticated;\n\n  return (\n    <div className=\"ng-header\">\n      <a href=\"/\">\n        <div className=\"logo\" />\n      </a>\n      <div className=\"option\">\n        {isAuthenticated ? <AuthenticatedHeaderOption /> : <PublicMenuOption />}\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport Routing from \"../../routing\";\nimport Header from \"../Header\";\n\nimport \"./styles.scss\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Routing />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {});\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport initialStore from \"./store.js\";\nimport \"./index.css\";\nimport App from \"./components/App/index.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// To learn redux and redux saga\n// https://www.codementor.io/@rajjeet/step-by-step-how-to-add-redux-saga-to-a-react-redux-app-11xqieyj67\n// https://redux.js.org/recipes/configuring-your-store\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={initialStore()}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}